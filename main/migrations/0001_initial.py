# Generated by Django 4.1 on 2022-11-25 04:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.IntegerField(choices=[(1, 'admin'), (2, 'user')], default=2)),
                ('country', models.CharField(max_length=210)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='academy/')),
                ('text', models.TextField()),
                ('title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club_who', models.CharField(max_length=215)),
                ('action', models.IntegerField(choices=[(1, 'yellow-card'), (2, 'red-card'), (3, 'goal')])),
                ('minute', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Advertiser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='advertiser/')),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Fc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Fc'), (2, 'Club')])),
                ('name', models.CharField(max_length=210)),
                ('trainer', models.CharField(blank=True, max_length=210, null=True)),
                ('logo', models.ImageField(upload_to='fc/')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insta', models.URLField()),
                ('telegram', models.URLField()),
                ('twitter', models.URLField()),
                ('youtube', models.URLField()),
                ('facebook', models.URLField()),
                ('phone', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('bio', models.TextField()),
                ('logo', models.ImageField(upload_to='info/')),
            ],
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='news/')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Passes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all', models.IntegerField()),
                ('successful', models.IntegerField()),
                ('percent', models.IntegerField()),
                ('status', models.IntegerField(choices=[(1, 'passes'), (2, 'long-passes'), (3, 'helps'), (4, 'crosses')])),
            ],
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=225)),
                ('last_name', models.CharField(max_length=225)),
                ('number', models.IntegerField(unique=True)),
                ('position', models.IntegerField(choices=[(3, 'defender'), (2, 'midfielder'), (4, 'goalkeeper'), (1, 'forward')], default=1)),
                ('birth', models.DateField()),
                ('image', models.ImageField(upload_to='player/')),
                ('captain', models.BooleanField(blank=True, default=False, null=True)),
                ('sub_captain', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Preview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('match_day', models.CharField(max_length=255)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guest', to='main.fc')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host', to='main.fc')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=210)),
                ('bonus', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=100)),
                ('text', models.TextField()),
                ('rating', models.IntegerField(choices=[(0, 'no rating'), (1, '1 star'), (2, '2 star'), (3, '3 star'), (4, '4 star'), (5, '5 star')], default=0)),
                ('image', models.ManyToManyField(to='main.images')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=210)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(choices=[(1, 'S'), (2, 'M'), (3, 'L'), (4, 'XL'), (5, 'XXL'), (6, '3XL')])),
                ('available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Squad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.preview')),
                ('team', models.ManyToManyField(to='main.players')),
            ],
        ),
        migrations.CreateModel(
            name='StadiumImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='stadium/')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(2, 'sub-trainer'), (6, 'admin'), (3, 'main-analytic'), (5, 'goalkeeper-trainer'), (4, 'doctor'), (1, 'trainer')])),
                ('name', models.CharField(max_length=210)),
                ('sur_name', models.CharField(max_length=210)),
                ('birth', models.DateField()),
                ('image', models.ImageField(upload_to='staff/')),
            ],
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='video/')),
                ('description', models.TextField()),
                ('date', models.DateTimeField(auto_now=True)),
                ('is_top', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Telegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_token', models.CharField(max_length=1000)),
                ('chat_id', models.ManyToManyField(to='main.chat')),
            ],
        ),
        migrations.CreateModel(
            name='Substitute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.IntegerField()),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_on', to='main.line')),
                ('squad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_out', to='main.squad')),
            ],
        ),
        migrations.CreateModel(
            name='Stadium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=210)),
                ('capacity', models.IntegerField()),
                ('image', models.ManyToManyField(to='main.stadiumimage')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='size',
            field=models.ManyToManyField(to='main.size'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('city', models.CharField(max_length=210)),
                ('status', models.IntegerField(choices=[(0, 'accepted'), (1, 'preparing'), (2, 'finished')], default=0)),
                ('order_item', models.ManyToManyField(to='main.orderitem')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.region')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='line',
            name='squad_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.squad'),
        ),
        migrations.AddField(
            model_name='line',
            name='team',
            field=models.ManyToManyField(to='main.players'),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possession', models.FloatField()),
                ('guest_action', models.ManyToManyField(related_name='guest', to='main.action')),
                ('host_action', models.ManyToManyField(related_name='host', to='main.action')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line', to='main.line')),
                ('mvp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mvp', to='main.line')),
                ('passes', models.ManyToManyField(to='main.passes')),
                ('subs', models.ManyToManyField(blank=True, null=True, to='main.substitute')),
            ],
        ),
        migrations.AddField(
            model_name='fc',
            name='players',
            field=models.ManyToManyField(blank=True, null=True, to='main.players'),
        ),
        migrations.AddField(
            model_name='fc',
            name='stadium',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.stadium'),
        ),
        migrations.AddField(
            model_name='fc',
            name='staff',
            field=models.ManyToManyField(blank=True, null=True, to='main.staff'),
        ),
        migrations.AddField(
            model_name='action',
            name='which',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.fc'),
        ),
        migrations.AddField(
            model_name='action',
            name='who',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.players'),
        ),
    ]
